#!/usr/bin/env python

import sys
from math import pi, sin, cos, sqrt
from numpy import arange

if len(sys.argv) != 9:
	print("Usage: {} x0 r0 x1 x2 y3 y4 x4 N".format(sys.argv[0]))
	sys.exit(0)


#   _________________  y4    #
#   |                |       #
#   |               /  y3    #
#   |  r0 ___,_____/         #
#   |    /                   #
#   |   /             ^      #
#   |   |             o >    #
#   |   \         x2         #
#   |    \___,_____          #
#   |              \         #
#   |    x0  x1     \        #
#   |________________|       #
#  x4                        #

try:
	x0 = float(sys.argv[1])
	r0 = float(sys.argv[2])
	x1 = float(sys.argv[3])
	x2 = float(sys.argv[4])
	y3 = float(sys.argv[5])
	y4 = float(sys.argv[6])
	x4 = float(sys.argv[7])
	N = int(sys.argv[8])
except Exception as e:
	print(e)
	sys.exit(-1)

def gen_line(x0, y0, x1, y1, dl, slip):
	l = sqrt((x1-x0)**2 + (y1-y0)**2)
	N = int(l/dl+0.5)
	for i in range(N):
		xi = x0 + (x1-x0)*i/N
		yi = y0 + (y1-y0)*i/N
		print("{:+0.6e}\t {:+0.6e} \t{}".format(xi, yi, slip))

def gen_arc(xc, yc, R, a0, a1, dl, slip):
	l = abs(R*(a1-a0))
	N = int(l/dl+0.5)
	for i in range(N):
		ai = a0 + (a1-a0)*i/N
		print("{:+0.6e}\t {:+0.6e} \t{}".format(xc+R*cos(ai), yc+R*sin(ai), slip))

def min(a, b):
	return a if (a<b) else b
def max(a, b):
	return a if (a>b) else b

# some calculations
# length of the viscous segments
l = 2 * ( (x2-x1) + sqrt(x2**2 + (y3-r0)**2) )
dl = l / N
print(dl)

gen_line(0, -y4, 0, -y3, min(dl*3, (y4-y3)/5), 0);
gen_line(0, -y3, x2, -r0, dl, 0);
gen_line(x2, -r0, x1, -r0, dl, 0);
gen_line(x1, -r0, x0, -r0, dl*3, 1);
gen_arc(x0, 0, r0, 3*pi/2, pi/2, dl*3, 1);
gen_line(x0, r0, x1, r0, dl*3, 1);
gen_line(x1, r0, x2, r0, dl, 0);
gen_line(x2, r0, 0, y3, dl, 0);
gen_line(0, y3, 0, y4, min(dl*3, (y4-y3)/5), 0);
gen_line(0, y4, x4, y4, dl*9, 1);
gen_line(x4, y4, x4, -y4, dl*9, 1);
gen_line(x4, -y4, 0, -y4, dl*9, 1);
